openapi: 3.1.1
info:
  title: User API
  summary: This is the API of the User service
  description: A service to manage users, allowing CRUD operations and retrieval of user info.
  contact:
    name: No√© Jouan - Evan Runemberg
    url: https://imt-atlantique.fr/
  license:
    name: GPL v3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.0
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /:
    get:
      tags:
      - developers
      summary: Home page of the service
      description: Returns a welcome message.
      operationId: home
      responses:
        "200":
          description: Welcome message
          content:
            text/html:
              schema:
                type: string
                example: "<h1 style='color:blue'>Welcome to the User service!</h1>"

  /users:
    post:
      tags:
      - developers
      summary: Add a new user
      description: Adds a new user to the system.
      operationId: add_user
      requestBody:
        description: User object to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserItem'
      responses:
        "200":
          description: User added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: user added
        "409":
          description: User ID already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User ID already exists

  /users/{userid}:
    get:
      tags:
      - developers
      summary: Get user by ID
      description: Retrieve user information by their ID.
      operationId: get_user_byid
      parameters:
      - name: userid
        in: path
        description: User ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItem'
        "404":
          description: User ID not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User ID not found
    put:
      tags:
      - developers
      summary: Update user by ID
      description: Updates an existing user's information.
      operationId: update_user
      parameters:
      - name: userid
        in: path
        description: User ID
        required: true
        schema:
          type: string
      requestBody:
        description: User object with updated information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserItem'
      responses:
        "200":
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItem'
        "404":
          description: User ID not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User ID not found
    delete:
      tags:
      - developers
      summary: Delete user by ID
      description: Deletes a user from the system.
      operationId: del_user
      parameters:
      - name: userid
        in: path
        description: User ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: User deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItem'
        "404":
          description: User ID not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User ID not found

components:
  schemas:
    AllUsers:
      type: object
      required:
        - users
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserItem'
    UserItem:
      type: object
      required:
        - id
        - name
        - last_active
        - is_admin
      properties:
        id:
          type: string
          example: chris_rivers
        name:
          type: string
          example: Chris Rivers
        last_active:
          type: integer
          description: Last active timestamp (Unix epoch)
          example: 1360031010
        is_admin:
          type: boolean
          example: false